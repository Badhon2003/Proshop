[{"D:\\Proshop\\frontend\\src\\index.js":"1","D:\\Proshop\\frontend\\src\\reportWebVitals.js":"2","D:\\Proshop\\frontend\\src\\store.js":"3","D:\\Proshop\\frontend\\src\\App.js":"4","D:\\Proshop\\frontend\\src\\reducers\\userReducers.js":"5","D:\\Proshop\\frontend\\src\\reducers\\loaderReducer.js":"6","D:\\Proshop\\frontend\\src\\reducers\\orderReducers.js":"7","D:\\Proshop\\frontend\\src\\components\\Footer.js":"8","D:\\Proshop\\frontend\\src\\screens\\LoginScreen.js":"9","D:\\Proshop\\frontend\\src\\reducers\\cartReducers.js":"10","D:\\Proshop\\frontend\\src\\screens\\ShippingScreen.js":"11","D:\\Proshop\\frontend\\src\\screens\\PlaceOrderScreen.js":"12","D:\\Proshop\\frontend\\src\\screens\\PaymentScreen.js":"13","D:\\Proshop\\frontend\\src\\screens\\RegisterScreen.js":"14","D:\\Proshop\\frontend\\src\\screens\\OrderScreen.js":"15","D:\\Proshop\\frontend\\src\\screens\\UserListScreen.js":"16","D:\\Proshop\\frontend\\src\\reducers\\bidReducers.js":"17","D:\\Proshop\\frontend\\src\\reducers\\productReducers.js":"18","D:\\Proshop\\frontend\\src\\screens\\UserEditScreen.js":"19","D:\\Proshop\\frontend\\src\\screens\\OrderListScreen.js":"20","D:\\Proshop\\frontend\\src\\components\\Header.js":"21","D:\\Proshop\\frontend\\src\\screens\\ProductScreen.js":"22","D:\\Proshop\\frontend\\src\\screens\\HomeScreens.js":"23","D:\\Proshop\\frontend\\src\\screens\\ProductEditScreen.js":"24","D:\\Proshop\\frontend\\src\\screens\\ProfileScreen.js":"25","D:\\Proshop\\frontend\\src\\screens\\ProductListScreen.js":"26","D:\\Proshop\\frontend\\src\\screens\\BidScreen.js":"27","D:\\Proshop\\frontend\\src\\contexts\\SocketContext.js":"28","D:\\Proshop\\frontend\\src\\components\\Message.js":"29","D:\\Proshop\\frontend\\src\\components\\FormContainer.js":"30","D:\\Proshop\\frontend\\src\\components\\CheckoutSteps.js":"31","D:\\Proshop\\frontend\\src\\components\\Loader.js":"32","D:\\Proshop\\frontend\\src\\constants\\loaderConstants.js":"33","D:\\Proshop\\frontend\\src\\components\\Rating.js":"34","D:\\Proshop\\frontend\\src\\constants\\userConstants.js":"35","D:\\Proshop\\frontend\\src\\constants\\cartConstants.js":"36","D:\\Proshop\\frontend\\src\\constants\\orderConstants.js":"37","D:\\Proshop\\frontend\\src\\components\\Paginate.js":"38","D:\\Proshop\\frontend\\src\\components\\SearchBox.js":"39","D:\\Proshop\\frontend\\src\\components\\Meta.js":"40","D:\\Proshop\\frontend\\src\\constants\\productConstants.js":"41","D:\\Proshop\\frontend\\src\\constants\\bidConstants.js":"42","D:\\Proshop\\frontend\\src\\actions\\productActions.js":"43","D:\\Proshop\\frontend\\src\\actions\\bidActions.js":"44","D:\\Proshop\\frontend\\src\\actions\\orderActions.js":"45","D:\\Proshop\\frontend\\src\\actions\\userActions.js":"46","D:\\Proshop\\frontend\\src\\actions\\cartActions.js":"47","D:\\Proshop\\frontend\\src\\components\\Product.js":"48"},{"size":607,"mtime":1690727162435,"results":"49","hashOfConfig":"50"},{"size":375,"mtime":1690727162486,"results":"51","hashOfConfig":"50"},{"size":2998,"mtime":1696856824884,"results":"52","hashOfConfig":"50"},{"size":3037,"mtime":1696856824598,"results":"53","hashOfConfig":"50"},{"size":2632,"mtime":1690727163804,"results":"54","hashOfConfig":"50"},{"size":335,"mtime":1690727163681,"results":"55","hashOfConfig":"50"},{"size":2679,"mtime":1690727163725,"results":"56","hashOfConfig":"50"},{"size":328,"mtime":1690727162887,"results":"57","hashOfConfig":"50"},{"size":2074,"mtime":1696860282330,"results":"58","hashOfConfig":"50"},{"size":1175,"mtime":1690727163632,"results":"59","hashOfConfig":"50"},{"size":2580,"mtime":1690727164465,"results":"60","hashOfConfig":"50"},{"size":5100,"mtime":1690727164189,"results":"61","hashOfConfig":"50"},{"size":1810,"mtime":1690727164150,"results":"62","hashOfConfig":"50"},{"size":3166,"mtime":1690727164434,"results":"63","hashOfConfig":"50"},{"size":7956,"mtime":1690727164103,"results":"64","hashOfConfig":"50"},{"size":3112,"mtime":1690727164575,"results":"65","hashOfConfig":"50"},{"size":922,"mtime":1696856824701,"results":"66","hashOfConfig":"50"},{"size":3771,"mtime":1696856824732,"results":"67","hashOfConfig":"50"},{"size":3216,"mtime":1690727164528,"results":"68","hashOfConfig":"50"},{"size":2718,"mtime":1690727164024,"results":"69","hashOfConfig":"50"},{"size":2748,"mtime":1696856824630,"results":"70","hashOfConfig":"50"},{"size":10475,"mtime":1696856824843,"results":"71","hashOfConfig":"50"},{"size":2327,"mtime":1696856824796,"results":"72","hashOfConfig":"50"},{"size":7160,"mtime":1696856824804,"results":"73","hashOfConfig":"50"},{"size":11378,"mtime":1696856824866,"results":"74","hashOfConfig":"50"},{"size":5156,"mtime":1696856824831,"results":"75","hashOfConfig":"50"},{"size":3564,"mtime":1696856824772,"results":"76","hashOfConfig":"50"},{"size":1510,"mtime":1696856824657,"results":"77","hashOfConfig":"50"},{"size":246,"mtime":1690727163081,"results":"78","hashOfConfig":"50"},{"size":347,"mtime":1690727162925,"results":"79","hashOfConfig":"50"},{"size":1288,"mtime":1690727162828,"results":"80","hashOfConfig":"50"},{"size":122,"mtime":1690727163018,"results":"81","hashOfConfig":"50"},{"size":90,"mtime":1690727163458,"results":"82","hashOfConfig":"50"},{"size":1633,"mtime":1690727163317,"results":"83","hashOfConfig":"50"},{"size":1088,"mtime":1690727163568,"results":"84","hashOfConfig":"50"},{"size":242,"mtime":1690727163427,"results":"85","hashOfConfig":"50"},{"size":906,"mtime":1690727163506,"results":"86","hashOfConfig":"50"},{"size":779,"mtime":1690727163187,"results":"87","hashOfConfig":"50"},{"size":595,"mtime":1690727163380,"results":"88","hashOfConfig":"50"},{"size":511,"mtime":1690727163128,"results":"89","hashOfConfig":"50"},{"size":1550,"mtime":1696856824646,"results":"90","hashOfConfig":"50"},{"size":308,"mtime":1696856824637,"results":"91","hashOfConfig":"50"},{"size":8992,"mtime":1696856824623,"results":"92","hashOfConfig":"50"},{"size":1845,"mtime":1696856824609,"results":"93","hashOfConfig":"50"},{"size":5302,"mtime":1690727162677,"results":"94","hashOfConfig":"50"},{"size":6592,"mtime":1690727162765,"results":"95","hashOfConfig":"50"},{"size":1253,"mtime":1690727162608,"results":"96","hashOfConfig":"50"},{"size":831,"mtime":1690727163239,"results":"97","hashOfConfig":"50"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},"1fgvfek",{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"100"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"100"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"100"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"100"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"100"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"100"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},"D:\\Proshop\\frontend\\src\\index.js",[],["201","202"],"D:\\Proshop\\frontend\\src\\reportWebVitals.js",[],"D:\\Proshop\\frontend\\src\\store.js",[],"D:\\Proshop\\frontend\\src\\App.js",["203","204","205","206","207"],"import React from 'react'\r\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\r\nimport { Container } from 'react-bootstrap'\r\nimport Header from './components/Header'\r\nimport Footer from './components/Footer'\r\nimport HomeScreens from './screens/HomeScreens'\r\nimport ProductScreen from './screens/ProductScreen'\r\nimport LoginScreen from './screens/LoginScreen'\r\nimport RegisterScreen from './screens/RegisterScreen'\r\nimport ProfileScreen from './screens/ProfileScreen'\r\nimport ShippingScreen from './screens/ShippingScreen'\r\nimport PaymentScreen from './screens/PaymentScreen'\r\nimport PlaceOrderScreen from './screens/PlaceOrderScreen'\r\nimport OrderScreen from './screens/OrderScreen'\r\nimport UserListScreen from './screens/UserListScreen'\r\nimport UserEditScreen from './screens/UserEditScreen'\r\nimport ProductListScreen from './screens/ProductListScreen'\r\nimport ProductEditScreen from './screens/ProductEditScreen'\r\nimport OrderListScreen from './screens/OrderListScreen'\r\nimport { SocketProvider } from './contexts/SocketContext'\r\nimport BidScreen from './screens/BidScreen'\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n        <SocketProvider>\r\n        <Header />\r\n        <main className='py-3'>\r\n          <Container>\r\n            {/* <Route path='/order/:id' component={OrderScreen} /> */}\r\n            {/* <Route path='/placeorder' component={PlaceOrderScreen} /> */}\r\n            {/* <Route path='/shipping' component={ShippingScreen} />\r\n            <Route path='/payment' component={PaymentScreen} /> */}\r\n            <Route path='/login' component={LoginScreen} />\r\n            <Route path='/register' component={RegisterScreen} />\r\n            <Route path='/profile' component={ProfileScreen} />\r\n            <Route path='/product/:id' component={ProductScreen} />\r\n            {/* <Route path='/cart/:id?' component={CartScreen} /> */}\r\n            <Route path='/admin/user-list' component={UserListScreen} />\r\n            <Route path='/admin/bids/:id' component={BidScreen} />\r\n            <Route path='/admin/user/:id/edit' component={UserEditScreen} />\r\n            <Route\r\n              path='/admin/product-list'\r\n              component={ProductListScreen}\r\n              exact\r\n            />\r\n            <Route\r\n              path='/admin/product-list/:page'\r\n              component={ProductListScreen}\r\n              exact\r\n            />\r\n            <Route path='/admin/product/:id/edit' component={ProductEditScreen} />\r\n            {/* <Route path='/admin/order-list' component={OrderListScreen} /> */}\r\n            <Route path='/search/:keyword' component={HomeScreens} exact />\r\n            <Route path='/page/:page' component={HomeScreens} exact />\r\n            <Route\r\n              path='/search/:keyword/page/:page'\r\n              component={HomeScreens}\r\n              exact\r\n            />\r\n            <Route path='/' component={HomeScreens} exact />\r\n          </Container>\r\n        </main>\r\n        <Footer />\r\n        </SocketProvider>\r\n    </Router>\r\n  )\r\n}\r\n\r\nexport default App\r\n","D:\\Proshop\\frontend\\src\\reducers\\userReducers.js",[],"D:\\Proshop\\frontend\\src\\reducers\\loaderReducer.js",[],"D:\\Proshop\\frontend\\src\\reducers\\orderReducers.js",[],"D:\\Proshop\\frontend\\src\\components\\Footer.js",[],"D:\\Proshop\\frontend\\src\\screens\\LoginScreen.js",[],"D:\\Proshop\\frontend\\src\\reducers\\cartReducers.js",[],"D:\\Proshop\\frontend\\src\\screens\\ShippingScreen.js",[],"D:\\Proshop\\frontend\\src\\screens\\PlaceOrderScreen.js",[],"D:\\Proshop\\frontend\\src\\screens\\PaymentScreen.js",[],"D:\\Proshop\\frontend\\src\\screens\\RegisterScreen.js",[],"D:\\Proshop\\frontend\\src\\screens\\OrderScreen.js",[],"D:\\Proshop\\frontend\\src\\screens\\UserListScreen.js",[],"D:\\Proshop\\frontend\\src\\reducers\\bidReducers.js",[],"D:\\Proshop\\frontend\\src\\reducers\\productReducers.js",[],"D:\\Proshop\\frontend\\src\\screens\\UserEditScreen.js",[],"D:\\Proshop\\frontend\\src\\screens\\OrderListScreen.js",[],"D:\\Proshop\\frontend\\src\\components\\Header.js",[],"D:\\Proshop\\frontend\\src\\screens\\ProductScreen.js",["208","209","210","211","212"],"import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Row, Col, Image, ListGroup, Card, Button, Form } from 'react-bootstrap'\r\nimport Rating from '../components/Rating'\r\nimport {\r\n  listProductDetails,\r\n  createProductReview,\r\n  updateProductStatus,\r\n} from '../actions/productActions'\r\nimport Message from '../components/Message'\r\nimport { PRODUCT_CREATE_REVIEW_RESET } from '../constants/productConstants'\r\nimport Meta from '../components/Meta'\r\nimport { createBid } from '../actions/bidActions'\r\nimport { useSocket } from '../contexts/SocketContext'\r\nimport { BID_CREATE_RESET } from '../constants/bidConstants'\r\n\r\nconst ProductScreen = ({ history, match }) => {\r\n  // const [qty, setQty] = useState(1)\r\n  const [rating, setRating] = useState(0)\r\n  const [comment, setComment] = useState('')\r\n  const [productStatus, setProductStatus] = useState('')\r\n  const [updateTimeLocal, setUpdateTimeLocal] = useState('')\r\n  const [newPrice, setNewPrice] = useState('')\r\n  \r\n  const { alertWithSocket, updateKey, updateTime } = useSocket()\r\n\r\n  const dispatch = useDispatch()\r\n  const { loading } = useSelector((state) => state.loader)\r\n\r\n  const productDetails = useSelector((state) => state.productDetails)\r\n  const { error, product } = productDetails\r\n\r\n  const productUpdate = useSelector((state) => state.productUpdate)\r\n\r\n  const bidCreate = useSelector((state) => state.bidCreate)\r\n  \r\n\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n  const { userInfo } = userLogin\r\n\r\n  const productReviewCreate = useSelector((state) => state.productReviewCreate)\r\n  const {\r\n    error: errorProductReview,\r\n    success: successProductReview,\r\n  } = productReviewCreate\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      dispatch({ type: BID_CREATE_RESET })\r\n    }\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    if (successProductReview) {\r\n      alert('Review Submitted')\r\n      setRating(0)\r\n      setComment('')\r\n      dispatch({ type: PRODUCT_CREATE_REVIEW_RESET })\r\n    }\r\n    dispatch(listProductDetails(match.params.id))\r\n  }, [dispatch, match, successProductReview])\r\n\r\n  useEffect(() => {\r\n    if (updateTime !== updateTimeLocal && updateKey === 'product') {\r\n      dispatch(listProductDetails(match.params.id))\r\n      setUpdateTimeLocal(updateTime)\r\n    }\r\n  }, [updateKey, updateTime])\r\n\r\n  useEffect(() => {\r\n    if (bidCreate && bidCreate.success) {\r\n      dispatch(listProductDetails(match.params.id))\r\n    }\r\n  }, [bidCreate])\r\n  \r\n  useEffect(() => {\r\n    if (product && product.price) {\r\n      setNewPrice(parseInt(product.price))\r\n    }\r\n  }, [product])\r\n  useEffect(() => {\r\n    // console.log('product: ', product.user)\r\n    // console.log('userInfo: ', userInfo._id)\r\n    setProductStatus(product?.status || '')\r\n  }, [product])\r\n\r\n\r\n  useEffect(() => {\r\n    console.log('bidCreate: ', bidCreate)\r\n    // console.log('bidList: ', bidList)\r\n  }, [bidCreate])\r\n\r\n  useEffect(() => {\r\n    if (productUpdate && productUpdate.success) {\r\n      alertWithSocket('product')\r\n    }\r\n  }, [productUpdate])\r\n\r\n\r\n  const bidHandler = () => {\r\n    console.log('new price: ', newPrice)\r\n    if (parseFloat(newPrice) < parseFloat(product.price)) {\r\n      alert('New Price must be greater than previous.')\r\n    } else {\r\n      dispatch(createBid({\r\n        product: product._id,\r\n        user: userInfo._id,\r\n        price: newPrice\r\n      }, alertWithSocket ))\r\n    }\r\n  }\r\n\r\n  const submitStatusHandler = () => {\r\n    if (product && product._id) {\r\n      dispatch(updateProductStatus(product._id, productStatus))\r\n    }\r\n  }\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n    dispatch(\r\n      createProductReview(match.params.id, {\r\n        rating,\r\n        comment,\r\n      })\r\n    )\r\n  }\r\n\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n      <button\r\n        className='btn btn-light my-3'\r\n        onClick={() => {\r\n          const _from = localStorage.getItem('product-details')\r\n          localStorage.removeItem('product-details')\r\n          if (_from === 'from-profile') {\r\n            history.push('/profile')\r\n          } else {\r\n            history.push('/')\r\n          }\r\n      }}>\r\n        Go Back\r\n      </button>\r\n      {error ? (\r\n        <Message variant='danger'>{error}</Message>\r\n      ) : (\r\n        productDetails && (\r\n          <>\r\n            <Meta title={product.name} />\r\n            <Row>\r\n              <Col md={6}>\r\n                <Image src={product.image} alt={product.name} fluid />\r\n              </Col>\r\n              <Col md={3}>\r\n                <ListGroup variant='flush'>\r\n                  <ListGroup.Item>\r\n                    <h3>{product.name}</h3>\r\n                  </ListGroup.Item>\r\n                  <ListGroup.Item>\r\n                    <Rating\r\n                      value={product.rating}\r\n                      text={`${product.numReviews} reviews`}\r\n                    />\r\n                  </ListGroup.Item>\r\n                  <ListGroup.Item>\r\n                    <h4>\r\n                      Price: ${product.price}\r\n                    </h4>\r\n                  </ListGroup.Item>\r\n                  <ListGroup.Item>\r\n                    Description: {product.description}\r\n                  </ListGroup.Item>\r\n                </ListGroup>\r\n              </Col>\r\n              {userInfo && (\r\n                <Col md={3}>\r\n                  <Card>\r\n                    <ListGroup.Item>\r\n                      <Form.Group controlId='name'>\r\n                        <Form.Label>Price</Form.Label>\r\n                        <Form.Control\r\n                          type='number'\r\n                          placeholder='Enter New Price'\r\n                          value={newPrice}\r\n                          onChange={(e) => setNewPrice(e.target.value)}\r\n                        ></Form.Control>\r\n                      </Form.Group>\r\n                      <Button\r\n                        className='btn-block'\r\n                        type='button'\r\n                        disabled={parseInt(product.price) > parseInt(newPrice) || product.status !== 'Active' }\r\n                        onClick={bidHandler}\r\n                      >\r\n                        BID\r\n                      </Button>\r\n                    </ListGroup.Item>\r\n                    {product?.user === userInfo?._id && (\r\n                      <ListGroup.Item>\r\n                        <Form.Group controlId='rating'>\r\n                          <Form.Label>Status</Form.Label>\r\n                          <Form.Control\r\n                            as='select'\r\n                            value={productStatus}\r\n                            onChange={(e) => setProductStatus(e.target.value)}\r\n                          >\r\n                            <option value=''>Select...</option>\r\n                            <option value='Draft'>Draft</option>\r\n                            <option value='Active'>Active</option>\r\n                            <option value='Sold'>Sold</option>\r\n                            <option value='Expired'>Expired</option>\r\n                          </Form.Control>\r\n                        </Form.Group>\r\n                        <Button\r\n                          className='btn-block'\r\n                          type='button'\r\n                          onClick={submitStatusHandler}\r\n                        >\r\n                          UPDATE\r\n                        </Button>\r\n                      </ListGroup.Item>\r\n                    )}\r\n                  </Card>\r\n                </Col>\r\n              )}\r\n            </Row>\r\n            <Row>\r\n              <Col md={6}>\r\n                <h2>Reviews</h2>\r\n                {product.reviews.length === 0 && <Message>No Reviews</Message>}\r\n                <ListGroup variant='flush'>\r\n                  {product.reviews.map((review) => (\r\n                    <ListGroup.Item key={review._id}>\r\n                      <strong>{review.name}</strong>\r\n                      <Rating value={review.rating} />\r\n                      <p>{review.createdAt.substring(0, 10)}</p>\r\n                      <p>{review.comment}</p>\r\n                    </ListGroup.Item>\r\n                  ))}\r\n                  <ListGroup.Item>\r\n                    <h2>Write a Customer Review</h2>\r\n                    {errorProductReview && (\r\n                      <Message variant='danger'>{errorProductReview}</Message>\r\n                    )}\r\n                    {userInfo ? (\r\n                      <Form onSubmit={submitHandler}>\r\n                        <Form.Group controlId='rating'>\r\n                          <Form.Label>Rating</Form.Label>\r\n                          <Form.Control\r\n                            as='select'\r\n                            value={rating}\r\n                            onChange={(e) => setRating(e.target.value)}\r\n                          >\r\n                            <option value=''>Select...</option>\r\n                            <option value='1'>1 - Poor</option>\r\n                            <option value='2'>2 - Fair</option>\r\n                            <option value='3'>3 - Good</option>\r\n                            <option value='4'>4 - Very Good</option>\r\n                            <option value='5'>5 - Excellent</option>\r\n                          </Form.Control>\r\n                        </Form.Group>\r\n                        <Form.Group controlId='comment'>\r\n                          <Form.Label>Comment</Form.Label>\r\n                          <Form.Control\r\n                            as='textarea'\r\n                            row='3'\r\n                            value={comment}\r\n                            onChange={(e) => setComment(e.target.value)}\r\n                          ></Form.Control>\r\n                        </Form.Group>\r\n                        <Button type='submit' variant='primary'>\r\n                          Submit\r\n                        </Button>\r\n                      </Form>\r\n                    ) : (\r\n                      <Message>\r\n                        Please{' '}\r\n                        <Link to='/login'>\r\n                          <strong>sing in</strong>\r\n                        </Link>{' '}\r\n                        to write a review.\r\n                      </Message>\r\n                    )}\r\n                  </ListGroup.Item>\r\n                </ListGroup>\r\n              </Col>\r\n            </Row>\r\n          </>\r\n        )\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ProductScreen\r\n","D:\\Proshop\\frontend\\src\\screens\\HomeScreens.js",["213"],"import React, { useEffect, useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Row, Col } from 'react-bootstrap'\r\nimport Product from '../components/Product'\r\nimport Message from '../components/Message'\r\nimport Paginate from '../components/Paginate'\r\nimport Meta from '../components/Meta'\r\nimport { listActiveProducts } from '../actions/productActions'\r\nimport { useSocket } from '../contexts/SocketContext'\r\n\r\nconst HomeScreens = ({ match }) => {\r\n  const keyword = match.params.keyword\r\n  const pageFromQuery = match.params.page || 1\r\n\r\n  const dispatch = useDispatch()\r\n  const { updateKey, updateTime } = useSocket()\r\n\r\n  const [updateTimeLocal, setUpdateTimeLocal] = useState('')\r\n  \r\n\r\n  const productList = useSelector((state) => state.productList)\r\n  const { error, products, page, pages } = productList\r\n\r\n  const { loading } = useSelector((state) => state.loader)\r\n\r\n  useEffect(() => {\r\n    dispatch(listActiveProducts(keyword, pageFromQuery))\r\n  }, [dispatch, keyword, pageFromQuery])\r\n\r\n  useEffect(() => {\r\n    console.log('update key  changed: ', updateKey)\r\n    if (updateTime !== updateTimeLocal && updateKey === 'product') {\r\n      dispatch(listActiveProducts(keyword, pageFromQuery))\r\n      setUpdateTimeLocal(updateTime)\r\n    }\r\n  }, [updateKey, updateTime])\r\n\r\n  return (\r\n    <>\r\n      <Meta />\r\n      {!keyword ? (\r\n        <>\r\n          {/* <ProductCarousel /> */}\r\n        </>\r\n      ) : (\r\n        <Link to='/' className='btn btn-light'>\r\n          Go Back\r\n        </Link>\r\n      )}\r\n      <h1>Active Products</h1>\r\n      {error ? (\r\n        <h3>\r\n          <Message variant='danger'>{error}</Message>\r\n        </h3>\r\n      ) : (\r\n        <>\r\n          <Row>\r\n            {products.map((product) => (\r\n              <Col key={product._id} sm={12} md={6} lg={4} xl={3}>\r\n                <Product product={product} />\r\n              </Col>\r\n            ))}\r\n            {!loading && products.length === 0 && (\r\n              <Message variant='info'>No Product is available</Message>\r\n            )}\r\n          </Row>\r\n          <Paginate\r\n            pages={pages}\r\n            page={page}\r\n            keyword={keyword ? keyword : ''}\r\n          />\r\n        </>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default HomeScreens\r\n","D:\\Proshop\\frontend\\src\\screens\\ProductEditScreen.js",["214","215"],"import axios from 'axios'\r\nimport React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { listProductDetails, updateProduct } from '../actions/productActions'\r\nimport { PRODUCT_UPDATE_RESET } from '../constants/productConstants'\r\nimport { useSocket } from '../contexts/SocketContext'\r\n\r\nconst ProductEditScreen = ({ match, history }) => {\r\n  const productId = match.params.id\r\n  const { alertWithSocket } = useSocket()\r\n\r\n  const [name, setName] = useState('')\r\n  // const [price, setPrice] = useState(0)\r\n  const [image, setImage] = useState('')\r\n  const [brand, setBrand] = useState('')\r\n  const [status, setStatus] = useState('')\r\n  const [category, setCategory] = useState('')\r\n  const [countInStock, setCountInStock] = useState(0)\r\n  const [description, setDescription] = useState('')\r\n  const [uploading, setUploading] = useState(false)\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const productDetails = useSelector((state) => state.productDetails)\r\n  const { error, product } = productDetails\r\n\r\n  const productUpdate = useSelector((state) => state.productUpdate)\r\n  const { success: successUpdate, error: errorUpdate } = productUpdate\r\n\r\n  const { loading } = useSelector((state) => state.loader)\r\n\r\n  useEffect(() => {\r\n    if (successUpdate) {\r\n      console.log('successUpdate: ', successUpdate)\r\n      dispatch({ type: PRODUCT_UPDATE_RESET })\r\n      \r\n      \r\n      alertWithSocket('product')\r\n      \r\n      history.push('/admin/product-list')\r\n    } else {\r\n      if (!product.name || product._id !== productId) {\r\n        dispatch(listProductDetails(productId))\r\n      } else {\r\n        setName(product.name)\r\n        setImage(product.image)\r\n        setBrand(product.brand)\r\n        setStatus(product.status)\r\n        setCategory(product.category)\r\n        setCountInStock(product.countInStock)\r\n        setDescription(product.description)\r\n      }\r\n    }\r\n  }, [dispatch, productId, history, product, successUpdate, productUpdate])\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n    console.log(image)\r\n    dispatch(\r\n      updateProduct({\r\n        _id: productId,\r\n        name,\r\n        image,\r\n        status,\r\n        brand,\r\n        category,\r\n        description,\r\n        countInStock,\r\n      })\r\n    )\r\n  }\r\n\r\n  const uploadFileHandler = async (e) => {\r\n    const file = e.target.files[0]\r\n    const formData = new FormData()\r\n    formData.append('image', file)\r\n    setUploading(true)\r\n\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data',\r\n        },\r\n      }\r\n      const { data } = await axios.post('/api/upload', formData, config)\r\n      // console.log(data)\r\n      setImage(data)\r\n      setUploading(false)\r\n    } catch (error) {\r\n      console.error(error)\r\n      setUploading(false)\r\n    }\r\n  }//to=\r\n  return (\r\n    <>\r\n      <Button\r\n        className='btn btn-light my-3'\r\n        onClick={() => {\r\n          const _from = localStorage.getItem('product-edit')\r\n          localStorage.removeItem('product-edit')\r\n          if (_from === 'from-profile') {\r\n            history.push('/profile')\r\n          } else {\r\n            history.push('/admin/product-list')\r\n          }\r\n        }}\r\n      >\r\n        Go Back\r\n      </Button>\r\n      <FormContainer>\r\n        <h1>Edit Product</h1>\r\n        {error ? (\r\n          <Message variant='danger'>{error}</Message>\r\n        ) : errorUpdate ? (\r\n          <Message variant='danger'>{errorUpdate}</Message>\r\n        ) : (\r\n          !loading && (\r\n            <Form onSubmit={submitHandler}>\r\n              <Form.Group controlId='name'>\r\n                <Form.Label>Name</Form.Label>\r\n                <Form.Control\r\n                  type='name'\r\n                  placeholder='Enter Name'\r\n                  value={name}\r\n                  onChange={(e) => setName(e.target.value)}\r\n                ></Form.Control>\r\n              </Form.Group>\r\n              <Form.Group controlId='rating'>\r\n                <Form.Label>Status</Form.Label>\r\n                <Form.Control\r\n                  as='select'\r\n                  value={status}\r\n                  onChange={(e) => setStatus(e.target.value)}\r\n                >\r\n                  <option value=''>Select...</option>\r\n                  <option value='Draft'>Draft</option>\r\n                  <option value='Active'>Active</option>\r\n                  <option value='Sold'>Sold</option>\r\n                  <option value='Expired'>Expired</option>\r\n                </Form.Control>\r\n              </Form.Group>\r\n\r\n              <Form.Group controlId='image'>\r\n                <Form.Label>Image</Form.Label>\r\n                <Form.Control\r\n                  type='text'\r\n                  placeholder='Enter Image URL'\r\n                  value={image}\r\n                  onChange={(e) => setImage(e.target.value)}\r\n                ></Form.Control>\r\n                <Form.File\r\n                  id='image-file'\r\n                  label='Choose File'\r\n                  custom\r\n                  onChange={uploadFileHandler}\r\n                ></Form.File>\r\n                {uploading && <Loader />}\r\n              </Form.Group>\r\n\r\n              <Form.Group controlId='brand'>\r\n                <Form.Label>Brand</Form.Label>\r\n                <Form.Control\r\n                  type='text'\r\n                  placeholder='Enter Brand'\r\n                  value={brand}\r\n                  onChange={(e) => setBrand(e.target.value)}\r\n                ></Form.Control>\r\n              </Form.Group>\r\n              <Form.Group controlId='countInStock'>\r\n                <Form.Label>Count In Stock</Form.Label>\r\n                <Form.Control\r\n                  type='number'\r\n                  placeholder='Enter Count In Stock'\r\n                  value={countInStock}\r\n                  onChange={(e) => setCountInStock(e.target.value)}\r\n                ></Form.Control>\r\n              </Form.Group>\r\n              <Form.Group controlId='category'>\r\n                <Form.Label>Category</Form.Label>\r\n                <Form.Control\r\n                  type='text'\r\n                  placeholder='Enter Category'\r\n                  value={category}\r\n                  onChange={(e) => setCategory(e.target.value)}\r\n                ></Form.Control>\r\n              </Form.Group>\r\n              <Form.Group controlId='description'>\r\n                <Form.Label>Description</Form.Label>\r\n                <Form.Control\r\n                  type='text'\r\n                  placeholder='Enter Description'\r\n                  value={description}\r\n                  onChange={(e) => setDescription(e.target.value)}\r\n                ></Form.Control>\r\n              </Form.Group>\r\n              <Button type='submit' variant='primary'>\r\n                Update\r\n              </Button>\r\n            </Form>\r\n          )\r\n        )}\r\n      </FormContainer>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ProductEditScreen\r\n","D:\\Proshop\\frontend\\src\\screens\\ProfileScreen.js",["216","217","218","219","220"],"import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Form, Button, Row, Col, Table, Tab, Tabs } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport { getUserDetails, updateUserProfile } from '../actions/userActions'\r\nimport { listMyOrders } from '../actions/orderActions'\r\nimport { createProduct, deleteProduct, listMyProducts, listPurchasedProducts } from '../actions/productActions'\r\nimport Paginate from '../components/Paginate'\r\nimport { PRODUCT_CREATE_RESET } from '../constants/productConstants'\r\n\r\nconst ProfileScreen = ({ location, history }) => {\r\n  const [email, setEmail] = useState('')\r\n  const [name, setName] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const [confirmPassword, setConfirmPassword] = useState('')\r\n  const [message, setMessage] = useState(null)\r\n  const [tabKey, setTabKey] = useState('purchased-products');//profile\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const userDetails = useSelector((state) => state.userDetails)\r\n  const { error: userDetailsError, user } = userDetails\r\n\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n  const { userInfo } = userLogin\r\n\r\n  const userUpdateProfile = useSelector((state) => state.userUpdateProfile)\r\n  const { success } = userUpdateProfile\r\n  \r\n  const { purchasedProducts, error: purchasedProductsError } = useSelector((state) => state.productListPurchased)\r\n  \r\n  const { myProducts, error: myProductListError } = useSelector((state) => state.productListMy)\r\n\r\n  const productDelete = useSelector((state) => state.productDelete)\r\n  const { error: errorDelete, success: successDelete } = productDelete\r\n\r\n  const productCreate = useSelector((state) => state.productCreate)\r\n  const {\r\n    error: errorCreate,\r\n    success: successCreate,\r\n    product: createdProduct,\r\n  } = productCreate\r\n\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      history.push('/login')\r\n    } else {\r\n      if (!user.name) {\r\n        dispatch(getUserDetails('profile'))\r\n        // dispatch(listMyOrders())\r\n        dispatch(listMyProducts(userInfo._id))\r\n        dispatch(listPurchasedProducts(userInfo._id))\r\n      } else {\r\n        setName(user.name)\r\n        setEmail(user.email)\r\n      }\r\n    }\r\n    if (successCreate) {\r\n      localStorage.setItem('product-edit', 'from-profile')\r\n      history.push(`/admin/product/${createdProduct._id}/edit`)\r\n    }\r\n  }, [history, userInfo, dispatch, user.name, user.email, successCreate])\r\n\r\n\r\n  useEffect(() => {\r\n    console.log('myProducts: ', myProducts)\r\n  }, [myProducts])\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n    if (password !== confirmPassword) {\r\n      setMessage('Passwords do not match')\r\n    } else {\r\n      dispatch(updateUserProfile({ is: user._id, name, email, password }))\r\n    }\r\n  }\r\n  const createProductHandler = () => {\r\n    dispatch(createProduct())\r\n  }\r\n\r\n\r\n  const deleteHandler = (id) => {\r\n    if (window.confirm('Are you sure!')) {\r\n      dispatch(deleteProduct(id))\r\n    }\r\n  }\r\n\r\n  const getStatusColorClassName = (_status) => {\r\n    let _class = ''\r\n    if (_status === 'Active') {\r\n      _class = 'text-success'\r\n    }\r\n    if (_status === 'Expired') {\r\n      _class = 'text-warning'\r\n    }\r\n\r\n    if (_status === 'Sold') {\r\n      _class = 'text-info'\r\n    }\r\n\r\n    return _class\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Link className='btn btn-light my-3' to='/'>\r\n        Go Back\r\n      </Link>\r\n      <Tabs\r\n        id=\"controlled-tab-example\"\r\n        activeKey={tabKey}\r\n        onSelect={(k) => setTabKey(k)}\r\n        className=\"mb-3\"\r\n      >\r\n        <Tab eventKey=\"profile\" title=\"Profile\">\r\n          {message && <Message variant='danger'>{message}</Message>}\r\n          {userDetailsError && <Message variant='danger'>{userDetailsError}</Message>}\r\n          {success && <Message variant='success'>Profile Updated!!</Message>}\r\n          <Form onSubmit={submitHandler}>\r\n            <Form.Group controlId='name'>\r\n              <Form.Label>Name</Form.Label>\r\n              <Form.Control\r\n                type='name'\r\n                placeholder='Enter Name'\r\n                value={name}\r\n                onChange={(e) => setName(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n            <Form.Group controlId='email'>\r\n              <Form.Label>Email Address</Form.Label>\r\n              <Form.Control\r\n                type='email'\r\n                placeholder='Enter email'\r\n                value={email}\r\n                onChange={(e) => setEmail(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n            <Form.Group controlId='password'>\r\n              <Form.Label>Password</Form.Label>\r\n              <Form.Control\r\n                type='password'\r\n                placeholder='Enter password'\r\n                value={password}\r\n                onChange={(e) => setPassword(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n            <Form.Group controlId='confirmPassword'>\r\n              <Form.Label>Confirm Password</Form.Label>\r\n              <Form.Control\r\n                type='password'\r\n                placeholder='Confirm password'\r\n                value={confirmPassword}\r\n                onChange={(e) => setConfirmPassword(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n            <Button type='submit' variant='primary'>\r\n              Update\r\n            </Button>\r\n          </Form>\r\n        </Tab>\r\n        <Tab eventKey=\"my-products\" title=\"My Products\">\r\n          <Row>\r\n            <Col>\r\n              <Row className='align-items-center'>\r\n                <Col>\r\n                  <h2>Products</h2>\r\n                </Col>\r\n                <Col className='text-right'>\r\n                  <Button className='my-3' onClick={createProductHandler}>\r\n                    <i className='fas fa-plus'></i> Create Product\r\n                  </Button>\r\n                </Col>\r\n              </Row>\r\n\r\n              {myProductListError ? (\r\n                <Message variant='danger'>{myProductListError}</Message>\r\n              ) : errorDelete ? (\r\n                <Message variant='danger'>{errorDelete}</Message>\r\n              ) : errorCreate ? (\r\n                <Message variant='danger'>{errorCreate}</Message>\r\n              ) : (\r\n                <>\r\n                  <Table\r\n                    striped\r\n                    bordered\r\n                    hover\r\n                    responsive\r\n                    className='table-sm text-center'\r\n                  >\r\n                    <thead>\r\n                      <tr>\r\n                        {/* <th>ID</th> */}\r\n                        <th>NAME</th>\r\n                        <th>PRICE</th>\r\n                        <th>STATUS</th>\r\n                        <th>CATEGORY</th>\r\n                        <th>BRAND</th>\r\n                        <th></th>\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                      {myProducts.map((product) => (\r\n                        <tr key={product._id}>\r\n                          {/* <td>{product._id}</td> */}\r\n                          <td>{product.name}</td>\r\n                          <td>${product.price}</td>\r\n                          <td className={getStatusColorClassName(product.status)}>{product.status}</td>\r\n                          <td>{product.category}</td>\r\n                          <td>{product.brand}</td>\r\n\r\n                          <td>\r\n                            <LinkContainer to={`/admin/bids/${product._id}`}>\r\n                              <Button variant='light' className='btn-sm' onClick={() => localStorage.setItem('view-bids', 'from-profile')}>\r\n                                <i className='fas fa-gavel'></i>\r\n                              </Button>\r\n                            </LinkContainer>\r\n                            <LinkContainer to={`/admin/product/${product._id}/edit`}>\r\n                              <Button variant='light' className='btn-sm' onClick={() => localStorage.setItem('product-edit', 'from-profile')}>\r\n                                <i className='fas fa-edit'></i>\r\n                              </Button>\r\n                            </LinkContainer>\r\n                            <Button\r\n                              variant='danger'\r\n                              className='btn-sm'\r\n                              onClick={() => {\r\n                                deleteHandler(product._id)\r\n                              }}\r\n                            >\r\n                              <i className='fas fa-trash'></i>\r\n                            </Button>\r\n                          </td>\r\n                        </tr>\r\n                      ))}\r\n                    </tbody>\r\n                  </Table>\r\n                  {/* <Paginate pages={pages} page={page} isAdmin={true} /> */}\r\n                </>\r\n              )}\r\n            </Col>\r\n          </Row>\r\n        </Tab>\r\n\r\n        <Tab eventKey=\"purchased-products\" title=\"Purchased Products\">\r\n          <Row>\r\n            \r\n            <Col>\r\n              {purchasedProductsError ? (\r\n                <Message variant='danger'>{purchasedProductsError}</Message>\r\n              ) : (\r\n                <>\r\n                  <Table\r\n                    striped\r\n                    bordered\r\n                    hover\r\n                    responsive\r\n                    className='table-sm text-center'\r\n                  >\r\n                    <thead>\r\n                      <tr>\r\n                        <th>NAME</th>\r\n                        <th>PRICE</th>\r\n                        <th>CATEGORY</th>\r\n                        <th>BRAND</th>\r\n                        <th></th>\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                      {purchasedProducts.map((product) => (\r\n                        <tr key={product._id}>\r\n                          <td>{product.name}</td>\r\n                          <td>${product.price}</td>\r\n                          <td>{product.category}</td>\r\n                          <td>{product.brand}</td>\r\n                          <td>\r\n                            <LinkContainer to={`/admin/bids/${product._id}`}>\r\n                              <Button variant='light' className='btn-sm' onClick={() => localStorage.setItem('view-bids', 'from-profile')}>\r\n                                <i className='fas fa-gavel'></i>\r\n                              </Button>\r\n                            </LinkContainer>\r\n                            <LinkContainer to={`/product/${product._id}`}>\r\n                              <Button variant='light' className='btn-sm' onClick={() => localStorage.setItem('product-details', 'from-profile')}>\r\n                                <i className='fas fa-eye'></i>\r\n                              </Button>\r\n                            </LinkContainer>\r\n                          </td>\r\n                        </tr>\r\n                      ))}\r\n                    </tbody>\r\n                  </Table>\r\n                </>\r\n              )}\r\n            </Col>\r\n          </Row>\r\n        </Tab>\r\n      </Tabs>\r\n      \r\n    </>\r\n  )\r\n}\r\n\r\nexport default ProfileScreen\r\n","D:\\Proshop\\frontend\\src\\screens\\ProductListScreen.js",[],"D:\\Proshop\\frontend\\src\\screens\\BidScreen.js",["221","222","223","224"],"import React, { useEffect } from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Table, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Paginate from '../components/Paginate'\r\nimport {\r\n  getBidList,\r\n} from '../actions/bidActions'\r\nimport { listProductDetails } from '../actions/productActions'\r\n\r\n\r\nconst BidScreen = ({ history, match }) => {\r\n  const productId = match.params.id\r\n  const dispatch = useDispatch()\r\n\r\n  const { bids, error: bidListError, page, pages } = useSelector((state) => state.bidList)\r\n\r\n  const productDetails = useSelector((state) => state.productDetails)\r\n  const { error: productError, product } = productDetails\r\n\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n  const { userInfo } = userLogin\r\n\r\n  const { loading } = useSelector((state) => state.loader)\r\n\r\n  useEffect(() => {\r\n\r\n    if (!userInfo) {\r\n      history.push('/login')\r\n    }\r\n    if (!product.name || product._id !== productId) {\r\n      dispatch(listProductDetails(productId))\r\n      dispatch(getBidList(productId))\r\n    }\r\n    \r\n  }, [\r\n    dispatch,\r\n    history,\r\n    userInfo,\r\n    productId\r\n  ])\r\n\r\n  useEffect(() => {\r\n    console.log('bids list: ', bids)\r\n  }, [bids])\r\n\r\n  const getBidTime = (_createdDate) => {\r\n    const date = new Date(_createdDate)\r\n\r\n    const options = {\r\n      hour: '2-digit',\r\n      minute: '2-digit',\r\n      second: '2-digit',\r\n      hour12: true,\r\n    };\r\n    \r\n    return date.toLocaleTimeString('en-US', options)\r\n  }\r\n  const getBidDate = (_createdDate) => {\r\n    const date = new Date(_createdDate);\r\n\r\n    const options = {\r\n      year: 'numeric',\r\n      month: 'short',\r\n      day: '2-digit',\r\n    };\r\n\r\n    return date.toLocaleDateString('en-US', options)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Button\r\n        className='btn btn-light my-3'\r\n        onClick={() => {\r\n          const _from = localStorage.getItem('view-bids')\r\n          localStorage.removeItem('view-bids')\r\n          if (_from === 'from-profile') {\r\n            history.push('/profile')\r\n          } else if (_from === 'from-admin-product-list') {\r\n            history.push('/admin/product-list')\r\n          } else {\r\n            history.push('/')\r\n          }\r\n        }}\r\n      >\r\n        Go Back\r\n      </Button>\r\n      <Row className='align-items-center'>\r\n        <Col>\r\n          <h1>Bids of <strong className='text-info'>{product?.name || ''}</strong></h1>\r\n        </Col>\r\n      </Row>\r\n      {bidListError ? (\r\n        <Message variant='danger'>{bidListError}</Message>\r\n      ) : (\r\n        <>\r\n          <Table\r\n            striped\r\n            bordered\r\n            hover\r\n            responsive\r\n            className='table-sm text-center'\r\n          >\r\n            <thead>\r\n              <tr>\r\n                <th>USER NAME</th>\r\n                <th>PRICE</th>\r\n                <th>DATE</th>\r\n                <th>TIME</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {bids.map((bid) => (\r\n                <tr key={bid._id}>\r\n                  <td>{bid.user?.name || ''}</td>\r\n                  <td>${bid.price}</td>\r\n                  <td>{getBidDate(bid.createdAt)}</td>\r\n                  <td>{getBidTime(bid.createdAt)}</td>\r\n                  \r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </Table>\r\n          <Paginate pages={pages} page={page} isAdmin={true} />\r\n        </>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default BidScreen\r\n","D:\\Proshop\\frontend\\src\\contexts\\SocketContext.js",[],"D:\\Proshop\\frontend\\src\\components\\Message.js",[],"D:\\Proshop\\frontend\\src\\components\\FormContainer.js",[],"D:\\Proshop\\frontend\\src\\components\\CheckoutSteps.js",[],"D:\\Proshop\\frontend\\src\\components\\Loader.js",[],"D:\\Proshop\\frontend\\src\\constants\\loaderConstants.js",[],"D:\\Proshop\\frontend\\src\\components\\Rating.js",[],"D:\\Proshop\\frontend\\src\\constants\\userConstants.js",[],"D:\\Proshop\\frontend\\src\\constants\\cartConstants.js",[],"D:\\Proshop\\frontend\\src\\constants\\orderConstants.js",[],"D:\\Proshop\\frontend\\src\\components\\Paginate.js",[],"D:\\Proshop\\frontend\\src\\components\\SearchBox.js",[],"D:\\Proshop\\frontend\\src\\components\\Meta.js",[],"D:\\Proshop\\frontend\\src\\constants\\productConstants.js",[],"D:\\Proshop\\frontend\\src\\constants\\bidConstants.js",[],"D:\\Proshop\\frontend\\src\\actions\\productActions.js",[],"D:\\Proshop\\frontend\\src\\actions\\bidActions.js",[],"D:\\Proshop\\frontend\\src\\actions\\orderActions.js",[],"D:\\Proshop\\frontend\\src\\actions\\userActions.js",[],"D:\\Proshop\\frontend\\src\\actions\\cartActions.js",[],"D:\\Proshop\\frontend\\src\\components\\Product.js",[],{"ruleId":"225","replacedBy":"226"},{"ruleId":"227","replacedBy":"228"},{"ruleId":"229","severity":1,"message":"230","line":11,"column":8,"nodeType":"231","messageId":"232","endLine":11,"endColumn":22},{"ruleId":"229","severity":1,"message":"233","line":12,"column":8,"nodeType":"231","messageId":"232","endLine":12,"endColumn":21},{"ruleId":"229","severity":1,"message":"234","line":13,"column":8,"nodeType":"231","messageId":"232","endLine":13,"endColumn":24},{"ruleId":"229","severity":1,"message":"235","line":14,"column":8,"nodeType":"231","messageId":"232","endLine":14,"endColumn":19},{"ruleId":"229","severity":1,"message":"236","line":19,"column":8,"nodeType":"231","messageId":"232","endLine":19,"endColumn":23},{"ruleId":"229","severity":1,"message":"237","line":29,"column":11,"nodeType":"231","messageId":"232","endLine":29,"endColumn":18},{"ruleId":"238","severity":1,"message":"239","line":52,"column":6,"nodeType":"240","endLine":52,"endColumn":8,"suggestions":"241"},{"ruleId":"238","severity":1,"message":"242","line":69,"column":6,"nodeType":"240","endLine":69,"endColumn":29,"suggestions":"243"},{"ruleId":"238","severity":1,"message":"244","line":75,"column":6,"nodeType":"240","endLine":75,"endColumn":17,"suggestions":"245"},{"ruleId":"238","severity":1,"message":"246","line":98,"column":6,"nodeType":"240","endLine":98,"endColumn":21,"suggestions":"247"},{"ruleId":"238","severity":1,"message":"248","line":38,"column":6,"nodeType":"240","endLine":38,"endColumn":29,"suggestions":"249"},{"ruleId":"229","severity":1,"message":"250","line":3,"column":10,"nodeType":"231","messageId":"232","endLine":3,"endColumn":14},{"ruleId":"238","severity":1,"message":"246","line":59,"column":6,"nodeType":"240","endLine":59,"endColumn":75,"suggestions":"251"},{"ruleId":"229","severity":1,"message":"252","line":8,"column":10,"nodeType":"231","messageId":"232","endLine":8,"endColumn":22},{"ruleId":"229","severity":1,"message":"253","line":10,"column":8,"nodeType":"231","messageId":"232","endLine":10,"endColumn":16},{"ruleId":"229","severity":1,"message":"254","line":11,"column":10,"nodeType":"231","messageId":"232","endLine":11,"endColumn":30},{"ruleId":"229","severity":1,"message":"255","line":37,"column":40,"nodeType":"231","messageId":"232","endLine":37,"endColumn":53},{"ruleId":"238","severity":1,"message":"256","line":64,"column":6,"nodeType":"240","endLine":64,"endColumn":73,"suggestions":"257"},{"ruleId":"229","severity":1,"message":"258","line":2,"column":10,"nodeType":"231","messageId":"232","endLine":2,"endColumn":23},{"ruleId":"229","severity":1,"message":"259","line":20,"column":18,"nodeType":"231","messageId":"232","endLine":20,"endColumn":30},{"ruleId":"229","severity":1,"message":"237","line":25,"column":11,"nodeType":"231","messageId":"232","endLine":25,"endColumn":18},{"ruleId":"238","severity":1,"message":"260","line":37,"column":6,"nodeType":"240","endLine":42,"endColumn":4,"suggestions":"261"},"no-native-reassign",["262"],"no-negated-in-lhs",["263"],"no-unused-vars","'ShippingScreen' is defined but never used.","Identifier","unusedVar","'PaymentScreen' is defined but never used.","'PlaceOrderScreen' is defined but never used.","'OrderScreen' is defined but never used.","'OrderListScreen' is defined but never used.","'loading' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["264"],"React Hook useEffect has missing dependencies: 'dispatch', 'match.params.id', and 'updateTimeLocal'. Either include them or remove the dependency array.",["265"],"React Hook useEffect has missing dependencies: 'dispatch' and 'match.params.id'. Either include them or remove the dependency array.",["266"],"React Hook useEffect has a missing dependency: 'alertWithSocket'. Either include it or remove the dependency array.",["267"],"React Hook useEffect has missing dependencies: 'dispatch', 'keyword', 'pageFromQuery', and 'updateTimeLocal'. Either include them or remove the dependency array.",["268"],"'Link' is defined but never used.",["269"],"'listMyOrders' is defined but never used.","'Paginate' is defined but never used.","'PRODUCT_CREATE_RESET' is defined but never used.","'successDelete' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'createdProduct._id'. Either include it or remove the dependency array.",["270"],"'LinkContainer' is defined but never used.","'productError' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'product._id' and 'product.name'. Either include them or remove the dependency array.",["271"],"no-global-assign","no-unsafe-negation",{"desc":"272","fix":"273"},{"desc":"274","fix":"275"},{"desc":"276","fix":"277"},{"desc":"278","fix":"279"},{"desc":"280","fix":"281"},{"desc":"282","fix":"283"},{"desc":"284","fix":"285"},{"desc":"286","fix":"287"},"Update the dependencies array to be: [dispatch]",{"range":"288","text":"289"},"Update the dependencies array to be: [dispatch, match.params.id, updateKey, updateTime, updateTimeLocal]",{"range":"290","text":"291"},"Update the dependencies array to be: [bidCreate, dispatch, match.params.id]",{"range":"292","text":"293"},"Update the dependencies array to be: [alertWithSocket, productUpdate]",{"range":"294","text":"295"},"Update the dependencies array to be: [dispatch, keyword, pageFromQuery, updateKey, updateTime, updateTimeLocal]",{"range":"296","text":"297"},"Update the dependencies array to be: [dispatch, productId, history, product, successUpdate, productUpdate, alertWithSocket]",{"range":"298","text":"299"},"Update the dependencies array to be: [history, userInfo, dispatch, user.name, user.email, successCreate, createdProduct._id]",{"range":"300","text":"301"},"Update the dependencies array to be: [dispatch, history, userInfo, productId, product.name, product._id]",{"range":"302","text":"303"},[1875,1877],"[dispatch]",[2367,2390],"[dispatch, match.params.id, updateKey, updateTime, updateTimeLocal]",[2524,2535],"[bidCreate, dispatch, match.params.id]",[3095,3110],"[alertWithSocket, productUpdate]",[1335,1358],"[dispatch, keyword, pageFromQuery, updateKey, updateTime, updateTimeLocal]",[2162,2231],"[dispatch, productId, history, product, successUpdate, productUpdate, alertWithSocket]",[2533,2600],"[history, userInfo, dispatch, user.name, user.email, successCreate, createdProduct._id]",[1174,1239],"[dispatch, history, userInfo, productId, product.name, product._id]"]